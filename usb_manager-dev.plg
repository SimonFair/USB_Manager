<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "usb_manager">
<!ENTITY author    "SimonFair">
<!ENTITY version   "2023.12.01">
<!ENTITY launch    "USBManagerSettings">
<!ENTITY gitURL    "https://raw.githubusercontent.com/SimonFair/USB_Manager/master">
<!ENTITY pluginURL "&gitURL;/usb_manager-dev.plg">
<!ENTITY supportURL	"https://forums.unraid.net/topic/100511-plugin-usbip-commands/">
<!ENTITY packages	"/boot/config/plugins/&name;/packages">
<!ENTITY md5		"86fa84d84daedeecb2850edbf7c7f9c8">
]>

<PLUGIN name="&name;"
		author="&author;"
		launch="&launch;"
		version="&version;"
		pluginURL="&pluginURL;"
		support="&supportURL;"
		icon="fa-usb"
		min="6.8.0">

<CHANGES>
##USB_Manager
###&version;

  - Add USBIP host finder and checker options and processing. Checker will attach a USBIP device found not connected to host already.
    Finder will look for devices in the local subnet using port 3240 and depending on options add or remove the host from the remote USBIP hosts, removal is for a host no longer found.

2022.07.18a

	
   - Add Serial processing
   - Fix upgrade processing for state file.
   - Code tidy.	
	
2022.05.20

   - Fix Possible race condition via PR from KnF thankyou.
	
2022.03.26beta3	
	
   - Chg state to use bus/dev as key.	

  - Fix start of usbipd and load of modules on array start..

2021.08.01

  - Code clean up
  - Change to udev rules for 6.10+ support.
  - Enable zebra strips on tables.
  
2021.07.27

  - Fix Change Unraid Flash to Unraid inuse on the hub lines on dashboard page.
  - Chg Use Port as standard rather than Physical BUSI/Port.

2021.07.23

  - Fix Disable roothub and hubs used for Unraid Flash device.

2021.07.10

  - Add volume to device list in USBHotplug page.

2021.07.09a

  - Add display of Hotplug Devices on main USB page and allow detach.

2021.07.09

  - Fix Virsh error if both port and device mapping exist for a device a connection time.
  - Add USB Manager Hotplug page on VM page, to enable change options in settings. Base code from DLandons Hot plug plugin. Addition support to show on USB page if mapping doesn't exist in next release.

2021.06.02a

  - Fix table formating if both port and device mappings for new volume column
  - Add Log virsh calls.

2021.06.26
 
  - Enhancement Show Volume for USB Storage Devices.

2021.06.20

- Enhancement enable port processing for mappinng ports to VM at start.
- Update text on edit settings page to describe entry being changed.

2021.06.19

- Install QEMU hooks file code, thanks to ljm42 for code.

2021.06.08

- Fix USBIP command check.

2021.06.06

- Initial beta release.

If you are using USBIP-GUI continue to do so at this time. This plugin will suppercede USBIP-GUI in the future and will migrate configurations.

USBIP-GUI and USB_Manager cannot co-exist. If you want to replace USBIP-GUI then uninstall first, Config files we remane on the flash drive you can copy them to usb_manager directory.

USBIP and USBIP-HOST module are not loaded by default. If you want to use them enable USBIP in the Settings and click the install button to install the additional plug.


</CHANGES>

<!--
The 'pre-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
# Check to see if new install.


if [ ! -d "/boot/config/plugins/&name;" ]
then
 mkdir "/boot/config/plugins/&name;"
 #Check to see if USBIP GUI exists
 if  [  -d "/boot/config/plugins/unraid.usbip-gui" ]
 then
    cp /boot/config/plugins/unraid.usbip-gui/*.cfg /boot/config/plugins/&name;/
    mv /boot/config/plugins/&name;/unraid.usbip-gui.cfg /boot/config/plugins/&name;/&name;.cfg
    plugin remove "usbip-gui.plg"
 fi
fi

</INLINE>
</FILE>

<!--
Get the plugin bundle.
-->
<FILE Name="&packages;/&name;-&version;.txz" Run="upgradepkg --install-new &packages;/&name;*%&packages;/&name;-&version;.txz">
<URL>"&gitURL;/&name;-&version;.txz"</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-updgrade' script.
-->
<FILE Run="/bin/bash">
<INLINE>
echo "Removing previous versons now upgrade has completed."
echo
# Remove old 'bundle' files.
rm -f $(ls &packages;/*.txz 2>/dev/null | grep -v '&version;')
</INLINE>
</FILE>

<!--
USB_Manager background start script.
-->
<FILE Name="/tmp/start_usb_manager" Mode="0770">
<INLINE>
#!/bin/bash
# Copy configuration files to tmp file system.
/usr/local/emhttp/plugins/&name;/scripts/copy_config.sh 2>1 /dev/null

#Start USBIPD if required.

if [ ! -z "$(pidof emhttpd)" ]
  then

   if [ ! -f /boot/config/plugins/usb_manager/v2 ]
       then
       mv /usr/local/emhttp/state/usb.ini /usr/local/emhttp/state/usb.old
   fi
  echo "start rc" > /dev/console
   /usr/local/emhttp/plugins/&name;/scripts/rc.&name; check_config 2>/dev/null
 echo "end rc" > /dev/console
   if [ ! -f /boot/config/plugins/&name;/v2 ]
      then
      /usr/local/emhttp/plugins/&name;/scripts/rc.&name; USBMgrUpgradeConnectedStatusv2 2>/dev/null
      touch /boot/config/plugins/&name;/v2 
   fi
fi

# Remove the background start script.
sleep 5
rm -f /tmp/start_usb_manager 2>/dev/null
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/&name;.cfg">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/remote_usbip.cfg">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/vm_mappings.cfg">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>



<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
# Define Functions


#Define Variables

KERNEL_V="$(uname -r)"
PACKAGE="usbip"
DL_URL="https://github.com/ich777/unraid-plugins-repo/releases/download/$KERNEL_V"

# Install the plugin bundle.
# Create plugin directory
mkdir /boot/config/plugins/&name; 2>/dev/null
mkdir /usr/local/emhttp/plugins/&name; 2>/dev/null
mkdir -p /tmp/&name;/config 2>/dev/null

#if [ ! -d "&packages;/${KERNEL_V%%-*}" ]; then
#  mkdir -p "&packages;/${KERNEL_V%%-*}"
#fi

# move the rules file
#cp /usr/local/emhttp/plugins/&name;/99_persistent_usb_manager.rules /etc/udev/rules.d/
#chmod 644 -R /etc/udev/rules.d/99_persistent_usb_manager.rules 2>/dev/null

# copy the syslog  rules config file
#cp /usr/local/emhttp/plugins/&name;/99_usb_manager_syslog.conf /etc/rsyslog.d/
#chmod 644 -R /etc/udev/rules.d/99_persistent_usb.rules 2>/dev/null
echo "1" >dev>console
# Adjust plugin permissions.
chmod 755 -R /usr/local/emhttp/plugins/&name; 2>/dev/null
echo "2" >dev>console
# Fix permissions of executable files
chmod +x /usr/local/emhttp/plugins/&name;/scripts/* /usr/local/emhttp/plugins/&name;/event/*
echo "3" >dev>console
# Create a symlink to USB_Manager scripts.
ln -sf /usr/local/emhttp/plugins/&name;/scripts/rc.usb_manager /usr/local/sbin
echo "4" >dev>console
# Copy Config to tmp and load modules.
at -M -f /tmp/start_usb_manager now 2>/dev/null
echo "5" >dev>console
# Update QEMU Hooks file and udev rules.
/usr/local/emhttp/plugins/&name;/scripts/install.sh 2>/dev/null
echo "6" >dev>console
# reload udev rules
udevadm control --reload-rules
echo "7" >dev>console
# restart rsyslogd
/etc/rc.d/rc.rsyslogd restart
echo "8" >dev>console
echo 
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " "
echo " Copyright 2016-2020, &author;"
echo " Version: &version;"
echo ""
echo "-----------------------------------------------------------"
echo 
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>

#Define Variables

KERNEL_V="$(uname -r)"
PACKAGE="usbip"

# Remove installed packages
find "&packages;/" -type f -iname "*.txz" -delete

rm -f /tmp/plugins/&name;.plg 
rm -r /tmp/&name;
rm  -f /etc/udev/rules.d/99_persistent_usb_manager.rules
rm  -f /etc/rsyslog.d/99_usb_manager_syslog.conf
rm  -f /boot/config/plugins/&name;/*.cron 
update_cron

#modprobe -r usbip_host
#modprobe -r vhci_hcd
#killall usbipd

# reload udev rules
udevadm control --reload-rules

# restart rsyslogd
/etc/rc.d/rc.rsyslogd restart

# Remove QEMU Hooks entries

/usr/local/emhttp/plugins/&name;/scripts/uninstall.sh 2>/dev/null


# Remove all plugin files from emhttp.
removepkg &packages;/&name;-&version;.txz 
#removepkg "&packages;/&name;/packages/${KERNEL_V%%-*}/${PACKAGE}-1.txz"
#depmod -a > /dev/null

echo 
echo "-----------------------------------------------------------"
echo " &name; has been uninstalled."
echo "-----------------------------------------------------------"
echo 

</INLINE>
</FILE>

</PLUGIN>
